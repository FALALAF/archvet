@rendermode InteractiveServer
@using BlazorApp1.Services
@inject AuthStateService AuthState
@inject NavigationManager Navigation
@implements IDisposable

<style>
    .auth-section {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .user-info {
        background: #f8f9fa;
        padding: 6px 12px;
        border-radius: 6px;
        border: 1px solid #dee2e6;
        font-size: 0.9rem;
    }

        .user-info strong {
            color: #495057;
        }

    .btn-custom {
        font-size: 0.875rem;
        padding: 6px 12px;
        border-radius: 6px;
        transition: all 0.2s;
    }

    .btn-admin-custom {
        background-color: #ffc107;
        color: #000;
        border: none;
    }

        .btn-admin-custom:hover {
            background-color: #ffb300;
            transform: translateY(-1px);
        }

    .btn-logout-custom {
        background-color: #6c757d;
        color: white;
        border: none;
    }

        .btn-logout-custom:hover {
            background-color: #5a6268;
            transform: translateY(-1px);
        }
</style>

<div class="auth-section">
    @if (AuthState.IsAuthenticated)
    {
        <div class="user-info">
            Witaj, <strong>@AuthState.DisplayName</strong>
            @if (AuthState.IsAdmin)
            {
                <span class="badge bg-danger ms-1">Admin</span>
            }
        </div>

        @if (AuthState.IsAdmin)
        {
            <button class="btn btn-sm btn-admin-custom btn-custom" @onclick="GoToAdmin">
                Panel Admina
            </button>
        }

        <button class="btn btn-sm btn-logout-custom btn-custom" @onclick="Logout">
            Wyloguj
        </button>
    }
    else
    {
        <a href="/login" class="btn btn-sm btn-outline-primary btn-custom">Logowanie</a>
        <a href="/register" class="btn btn-sm btn-primary btn-custom">Rejestracja</a>
    }
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await AuthState.InitializeAsync();
        AuthState.OnChange += StateHasChanged;
    }

    private void GoToAdmin()
    {
        Navigation.NavigateTo("/admin");
    }

    private async Task Logout()
    {
        await AuthState.LogoutAsync();
        Navigation.NavigateTo("/");
    }

    public void Dispose()
    {
        AuthState.OnChange -= StateHasChanged;
    }
}